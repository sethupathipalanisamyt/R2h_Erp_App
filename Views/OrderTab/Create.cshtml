@model R2h_Erp_App.Models.OrdertabVM;
@{
    ViewData["Title"] = "Create";
}
<html lang="en">
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 30px;
            background-color: #f0f8ff;
        }

        .table {
            border-style: groove;
        }

        .container, .package {
            display: flex;
            justify-content: space-evenly;
        }

        .calculation {
            display: inline-block;
            
            float: inline-end;
        }

        .form-size {
            display: flex;
            flex-direction: row;
        }

        .form-adjust {
            justify-content: space-between;
            display: block;
        }   
        #addItemButton:hover{
            background-color:forestgreen;
            
        }

        #showall{
            width:100%;
            align-content:center;
          
        }

        .container.form-group, .package.form-group {
            display: inline-block;
            align-items: center;
           
        }
    </style>
</head>
<body>
    <form id="orderForm" asp-action="Create" method="post">
        <input type="hidden" asp-for="OrderId" />
        <a asp-controller="OrderTab" asp-action="List" id="Showall" class="d-grid gap-2 col-6 mx-auto btn btn-success "> Show all</a>
        <h5><b>@ViewData["Title"] Order</b></h5>
        <br />
        <div class="container">
            @if (Model.OrderId == 0)
            {
                <div class="form-group">
                    <label asp-for="OrderNumber" class="control-label"></label>
                    <input asp-for="OrderNumber" id="OrderNumber" class="form-control" required />
                    <span asp-validation-for="OrderNumber" id="orderNumberError" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Customer</label><span class="mandatory"></span>
                    @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input asp-for="OrderDate" id="orderDate" class="form-control" />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label asp-for="OrderNumber" class="control-label"></label>
                    <input asp-for="OrderNumber" id="OrderNumber" class="form-control" required readonly />
                    <span asp-validation-for="OrderNumber" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label">Customer</label><span class="mandatory"></span>
                    @Html.DropDownList("CustomerId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required", disabled = "disabled" })
                    <input type="hidden" asp-for="CustomerId" />
                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                </div>


                <div class="form-group">
                    <label asp-for="OrderDate" class="control-label"></label>
                    <input asp-for="OrderDate" id="orderDate" class="form-control" readonly />
                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                </div>
            }
        </div>
   
        <br />
        <h5><b>Order Items</b></h5>
        <br />
        <div class="package">
            <div class="form-group">
                <label class="control-label">Products</label><span class="mandatory"></span>
                @Html.DropDownList("ProductId", (IEnumerable<SelectListItem>)ViewBag.ProductId, "--Select--", new { @id = "ProductId", @class = "form-select" })
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" id="Quantity" class="form-control" required />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" id="UnitPrice" class="form-control" readonly />
                <span asp-validation-for="UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-button">
                <br />
                <button id="addItemButton" type="button" class="btn btn-primary h-60"><i class="fa-solid fa-plus"></i> Add Item</button>
            </div>
        </div>
        <br />
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                        </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                        </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitPrice)
                        </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TotalAmount)
                        </th>
                </tr>
            </thead>
            <tbody id="tpro">

            </tbody>
        </table>
        <div class="calculation">
            <div class="form-size">
                <label asp-for="SubTotal" class="control-label"></label>
                <input asp-for="SubTotal" value="" id="SubTotal" class="form-control" readonly />
                <span asp-validation-for="SubTotal" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="Discount" id="Discountlabel" class="control-label"></label>
                <input asp-for="Discount" id="Discount" class="form-control" required />
                <span asp-validation-for="Discount" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="ShippingFee" class="control-label"></label>
                <input asp-for="ShippingFee" id="ShippingFee" class="form-control" required />
                <span asp-validation-for="ShippingFee" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="NetAmount" class="control-label"></label>
                <input asp-for="NetAmount" id="NetTotal" class="form-control" readonly />
                <span asp-validation-for="NetAmount" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <label class="control-label">Status</label><span class="mandatory"></span>
                @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.StatusId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="StatusId" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <button type="submit" class="d-grid gap-2 col-4 mx-auto btn btn-success">Save</button>
            </div>
        </div>
    </form>
    <script>
        $(document).ready(function () {
            $('#OrderNumber').on('input', function () {
                var orderNumber = $(this).val();
                if (orderNumber) {
                    $.ajax({
                        url: '@Url.Action("IsOrderNumberAvailable", "OrderTab")',
                        type: 'POST',
                        data: { orderNumber: orderNumber },
                        success: function (response) {
                            if (!response) {
                                $('#orderNumberError').text('Order number already exists.');
                            } else {
                                $('#orderNumberError').text('');
                            }
                        },
                        error: function () {
                            $('#orderNumberError').text('Error checking order number.');
                        }
                    });
                } else {
                    $('#orderNumberError').text('');
                }
            });

            let editingItem = null;

            function calculateNetAmount() {
                var subtotal = parseFloat($('#SubTotal').val()) || 0;
                var discount = parseFloat($('#Discount').val()) || 0;
                var shippingFee = parseFloat($('#ShippingFee').val()) || 0;

                var discountAmount = discount ;
                var netAmount = subtotal - discountAmount + shippingFee;

                $('#NetTotal').val(netAmount.toFixed(2));
            }

            function calculateAmount() {
                var productId = $('#ProductId').val();
                $.ajax({
                    url: '/OrderTab/GetUnitPrice',
                    type: 'GET',
                    data: { productId: productId },
                    success: function (data) {
                        var unitPrice = parseFloat(data);
                        $('#UnitPrice').val(unitPrice.toFixed(2));
                    },
                    error: function () {
                        alert('Error fetching unit price.');
                    }
                });
            }

            function updateTable(response) {
                var subtotal = 0;
                $("#tpro").empty();
                $.each(response.items, function (index, item) {
                    if (!item.isDeleted) {
                        var row = '<tr>' +
                            '<td>' + item.productName + '</td>' +
                            '<td>' + item.quantity + '</td>' +
                            '<td>' + item.unitPrice.toFixed(2) + '</td>' +
                            '<td>' + item.totalAmount.toFixed(2) + '</td>' +
                            '<td>' +
                            '<button type="button" class="btn btn-sm btn-primary editItem" data-product-id="' + item.productId + '">Edit</button>' +
                            '<button type="button" class="btn btn-sm btn-danger deleteItem" data-product-id="' + item.productId + '">Delete</button>' +
                            '</td>' +
                            '</tr>';
                        $("#tpro").append(row);
                        subtotal += item.totalAmount;
                    }
                });
                $("#SubTotal").val(subtotal.toFixed(2));
                calculateNetAmount();
            }

            $('#ProductId').change(function () {
                calculateAmount();
            });

            $('#addItemButton').click(function (event) {
                event.preventDefault();

                var quantity = parseInt($('#Quantity').val()) || 0;

                if (quantity <= 0) {
                    alert('Please enter a valid quantity.');
                    return;
                }

                var newItem = {
                    ProductId: $('#ProductId').val(),
                    ProductName: $('#ProductId option:selected').text(),
                    Quantity: quantity,
                    UnitPrice: $('#UnitPrice').val(),
                    TotalAmount: quantity * (parseFloat($('#UnitPrice').val()) || 0)
                };

                if (editingItem !== null) {
                    newItem.ProductId = editingItem;
                    $.ajax({
                        data: newItem,
                        method: "POST",
                        url: '@Url.Action("UpdateItem", "OrderTab")',
                        success: function (response) {
                            if (response.success) {
                                updateTable(response);
                                resetForm();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function () {
                            alert('Error updating item.');
                        }
                    });
                } else {
                    var existingRow = $("#tpro tr").filter(function () {
                        return $(this).find('.editItem').data('product-id') == newItem.ProductId;
                    });

                    if (existingRow.length > 0) {
                        var currentQuantity = parseInt(existingRow.find('td:eq(1)').text()) || 0;
                        var newQuantity = currentQuantity + newItem.Quantity;
                        var newTotalAmount = newQuantity * newItem.UnitPrice;

                        newItem.Quantity = newQuantity;
                        newItem.TotalAmount = newTotalAmount;

                        $.ajax({
                            data: newItem,
                            method: "POST",
                            url: '@Url.Action("UpdateItem", "OrderTab")',
                            success: function (response) {
                                if (response.success) {
                                    updateTable(response);
                                    resetForm();
                                } else {
                                    alert(response.message);
                                }
                            },
                            error: function () {
                                alert('Error updating item.');
                            }
                        });
                    } else {
                        $.ajax({
                            data: newItem,
                            method: "POST",
                            url: '@Url.Action("AddItem", "OrderTab")',
                            success: function (response) {
                                if (response.success) {
                                    updateTable(response);
                                    resetForm();
                                } else {
                                    alert(response.message);
                                }
                            },
                            error: function () {
                                alert('Error adding item.');
                            }
                        });
                    }
                }
            });

            function resetForm() {
                $('#ProductId').val('');
                $('#Quantity').val(0);
                $('#UnitPrice').val(0.00);
                $('#addItemButton').text('Add Item');
                editingItem = null;
            }

            var existingOrderItems = @Html.Raw(ViewBag.OrderItems ?? "[]");
            if (existingOrderItems.length > 0) {
                var subtotal = 0;
                $.each(existingOrderItems, function (index, item) {
                    var row = '<tr>' +
                        '<td>' + item.ProductName + '</td>' +
                        '<td>' + item.Quantity + '</td>' +
                        '<td>' + item.UnitPrice.toFixed(2) + '</td>' +
                        '<td>' + item.TotalAmount.toFixed(2) + '</td>' +
                        '<td>' +
                        '<button type="button" class="btn btn-sm btn-primary editItem" data-product-id="' + item.ProductId + '">Edit</button>' +
                        '<button type="button" class="btn btn-sm btn-danger deleteItem" data-product-id="' + item.ProductId + '">Delete</button>' +
                        '</td>' +
                        '</tr>';
                    $("#tpro").append(row);
                    subtotal += item.TotalAmount;
                });
                $("#SubTotal").val(subtotal.toFixed(2));
                calculateNetAmount();
            }

            $(document).on('click', '.editItem', function () {
                var productId = $(this).data('product-id');
                var row = $(this).closest('tr');
                var productName = row.find('td:eq(0)').text();
                var quantity = row.find('td:eq(1)').text();
                var unitPrice = row.find('td:eq(2)').text();

                $('#ProductId').val(productId).trigger('change');
                $('#Quantity').val(quantity);
                $('#UnitPrice').val(unitPrice);
                $('#addItemButton').text('Update Item');
                editingItem = productId;
            });

            $(document).on('click', '.deleteItem', function () {
                var productId = $(this).data('product-id');

                $.ajax({
                    url: '@Url.Action("DeleteItem", "OrderTab")',
                    type: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        if (response.success) {
                            updateTable(response);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert("Error deleting item.");
                    }
                });
            });

            $('#orderForm').submit(function (event) {
                var discount = $('#Discount').val();
                var shippingFee = $('#ShippingFee').val();

                if (!discount) {
                    $('#Discount').val(0);
                }
                if (!shippingFee) {
                    $('#ShippingFee').val(0);
                }
                if ($('#tpro tr').length === 0) {
                    event.preventDefault();
                    alert('Please add at least one order item.');
                }
            });

            // Recalculate NetAmount when Discount or ShippingFee changes
            $('#Discount, #ShippingFee').on('input', function () {
                calculateNetAmount();
            });
        });


    </script> 
</body>
</html>
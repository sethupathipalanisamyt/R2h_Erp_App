@model R2h_Erp_App.Models.OrdertabVM;
@{
    ViewData["Title"] = "Create";
}
<html lang="en">
<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 30px;
            background-color: #f0f8ff;
        }

        .table {
            border-style: groove;
        }

        .container, .package {
            display: flex;
            justify-content: space-evenly;
        }

        .calculation {
            display: inline-block;
            align-items: right;
            float: inline-end;
        }

        .form-size {
            display: flex;
            flex-direction: row;
        }

        .form-adjust {
            justify-content: space-between;
            display: block;
        }
        #showall{
            width:100%;
            align-content:center;
            flex-direction:row;
        }

        .container.form-group, .package.form-group {
            display: inline-block;
            align-items: center;
            justify-items: space-between;
        }
    </style>
</head>
<body>
    <form asp-action="Create" method="post">
        <input type="hidden" asp-for="OrderId" />
        <a asp-controller="OrderTab" asp-action="List" id="Showall" class="btn btn-success "> Show all</a>
        <h5><b>@ViewData["Title"] Order</b></h5>
        <br />
        <div class="container">
            <div class="form-group">
                <label asp-for="OrderNumber" class="control-label"></label>
                <input asp-for="OrderNumber" id="OrderNumber" class="form-control" required />
                <span asp-validation-for="OrderNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Customer</label><span class="mandatory"></span>
                @Html.DropDownList("CustomersId", (IEnumerable<SelectListItem>)ViewBag.CustomersId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" id="orderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
        </div>
        <br />
        <h5><b>Order Items</b></h5>
        <br />
        <div class="package">
            <div class="form-group">
                <label class="control-label">Products</label><span class="mandatory"></span>
                @Html.DropDownList("ProductId", (IEnumerable<SelectListItem>)ViewBag.ProductId, "--Select--", new { @id = "ProductId", @class = "form-select" })
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" id="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="UnitPrice" class="control-label"></label>
                <input asp-for="UnitPrice" id="UnitPrice" class="form-control" readonly />
                <span asp-validation-for="UnitPrice" class="text-danger"></span>
            </div>
            <div class="form-button">
                <br />
                <button id="addItemButton" type="button" class="btn btn-primary h-60"><i class="fa-solid fa-plus"></i> Add Item</button>
            </div>
        </div>
        <br />
        <br />
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                        </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Quantity)
                        </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UnitPrice)
                        </th>
                    <th>
                        @Html.DisplayNameFor(model => model.TotalAmount)
                        </th>
                </tr>
            </thead>
            <tbody id="tpro">

            </tbody>
        </table>
        <div class="calculation">
            <div class="form-size">
                <label asp-for="SubTotal" class="control-label"></label>
                <input asp-for="SubTotal" value="" id="SubTotal" class="form-control" readonly />
                <span asp-validation-for="SubTotal" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="Discount" class="control-label"></label>
                <input asp-for="Discount" id="Discount" class="form-control" />
                <span asp-validation-for="Discount" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="ShippingFee" class="control-label"></label>
                <input asp-for="ShippingFee" id="ShippingFee" class="form-control" />
                <span asp-validation-for="ShippingFee" class="text-danger"></span>
            </div>
            <div class="form-size">
                <label asp-for="NetAmount" class="control-label"></label>
                <input asp-for="NetAmount" id="NetTotal" class="form-control" readonly />
                <span asp-validation-for="NetAmount" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <label class="control-label">Status</label><span class="mandatory"></span>
                @Html.DropDownList("StatusId", (IEnumerable<SelectListItem>)ViewBag.StatusId, "--Select--", new { @class = "form-select", required = "required" })
                <span asp-validation-for="StatusId" class="text-danger"></span>
            </div>
            <div class="form-adjust">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </form>

    <script>
   
        $(document).ready(function () {
            function calculateTotalAmount() {
                var quantity = parseInt($('#Quantity').val()) || 0;
                var unitPrice = parseFloat($('#UnitPrice').val()) || 0;
                var totalAmount = quantity * unitPrice;
                $('#SubTotal').val(totalAmount.toFixed(2));
                calculateNetAmount();
            }

            function calculateNetAmount() {
                var subtotal = parseFloat($('#SubTotal').val()) || 0;
                var discount = parseFloat($('#Discount').val()) || 0;
                var shippingFee = parseFloat($('#ShippingFee').val()) || 0;

                var discountAmount = (discount / 100) * subtotal;
                var netAmount = subtotal - discountAmount + shippingFee;

                $('#NetTotal').val(netAmount.toFixed(2));
            }

            $('#Quantity, #UnitPrice').on('input', function () {
                calculateTotalAmount();
            });

            $('#SubTotal, #Discount, #ShippingFee').on('input', function () {
                calculateNetAmount();
            });

            $('#ProductId').change(function () {
                calculateAmount();
            });

            function calculateAmount() {
                var productId = $('#ProductId').val();
                $.ajax({
                    url: '/OrderTab/GetUnitPrice',
                    type: 'GET',
                    data: { productId: productId },
                    success: function (data) {
                        var unitPrice = parseFloat(data);
                        $('#UnitPrice').val(unitPrice.toFixed(2));
                    },
                    error: function () {
                        alert('Error fetching unit price.');
                    }
                });
            }

            $('#addItemButton').click(function (event) {
                event.preventDefault();
                var newItem = {
                    ProductId: $('#ProductId').val(),
                    ProductName: $('#ProductId option:selected').text(),
                    Quantity: $('#Quantity').val(),
                    UnitPrice: $('#UnitPrice').val(),
                    TotalAmount: (parseInt($('#Quantity').val()) || 0) * (parseFloat($('#UnitPrice').val()) || 0)
                };

                $.ajax({
                    data: newItem,
                    method: "POST",
                    url: '@Url.Action("AddItem", "OrderTab")',
                    success: function (response) {
                        $("#tpro").empty();
                        var subtotal = 0;
                        $.each(response, function (index, item) {
                            var row = '<tr>' +
                                '<td>' + item.productName + '</td>' +
                                '<td>' + item.quantity + '</td>' +
                                '<td>' + item.unitPrice + '</td>' +
                                '<td>' + item.totalAmount + '</td>' +
                                '</tr>';
                            $("#tpro").append(row);
                            subtotal += item.totalAmount;
                        });
                        $("#SubTotal").val(subtotal.toFixed(2));
                        calculateNetAmount();
                    },
                    error: function (response) {
                        alert('Error adding item.');
                    }
                });
            });

            // Load existing order items if available
            var existingOrderItems = @Html.Raw(ViewBag.OrderItems ?? "[]");
            existingOrderItems = existingOrderItems.length ? existingOrderItems : [];
            if (existingOrderItems.length > 0) {
                $.each(existingOrderItems, function (index, item) {
                    var row = '<tr>' +
                        '<td>' + item.ProductName + '</td>' +
                        '<td>' + item.Quantity + '</td>' +
                        '<td>' + item.UnitPrice + '</td>' +
                        '<td>' + item.TotalAmount + '</td>' +
                        '</tr>';
                    $("#tpro").append(row);
                });
                $("#SubTotal").val(existingOrderItems.reduce(function (acc, item) { return acc + item.TotalAmount; }, 0).toFixed(2));
                calculateNetAmount();
            }

        });
    </script>
</body>
</html>